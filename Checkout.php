<?php
/**
 * Created by PhpStorm.
 * User: muntaser
 * Date: 11/28/18
 * Time: 9:03 AM
 */

namespace hammash\checkout;

use com\checkout\ApiClient;
use Yii;
use yii\base\Component;
use yii\base\InvalidConfigException;
use Httpful\Request;
use com\checkout as baseCheckout;
use hammash\checkout\Charges;
use hammash\checkout\RecurringPayments;
use hammash\checkout\Reporting;

class Checkout extends Component
{
    /** @var  $secretKey string */
    public $secretKey;
    public $publicKey;
    public $env = 'sandbox';
    public $debugMode = false;
    public $connectTimeout = 60;
    public $readTimeout = 60;
    public $mode;
    public $recurringPayment;

    protected $api;

    /** @var  $apiClient ApiClient */
    protected $apiClient;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if (empty($this->secretKey)) {
            throw new \Exception('Required secretKey');
        }

        $this->apiClient = new baseCheckout\ApiClient($this->secretKey, $this->env, $this->debugMode, $this->connectTimeout, $this->readTimeout);

    }

    /**
     * @return \hammash\checkout\Charges
     */
    public function charges()
    {
        return  Charges::getInstance($this->apiClient);
    }

    /**
     * @return \hammash\checkout\RecurringPayments
     */
    public function recurringPayment()
    {
        return  RecurringPayments::getInstance($this->apiClient);
    }

    /**
     * @return hammash\checkout\Reporting
     */
    public function reporting()
    {
        return  Reporting::getInstance($this->apiClient);
    }


}


